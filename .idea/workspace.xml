<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="47a15d9d-c79e-46a9-bbbf-df38ac55657d" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/quora-service/src/main/java/com/upgrad/quora/service/business/AnswerService.java" beforeDir="false" afterPath="$PROJECT_DIR$/quora-service/src/main/java/com/upgrad/quora/service/business/AnswerService.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>Time</find>
      <find>a</find>
      <find>API</find>
      <find>003</find>
      <find>002</find>
      <find>004</find>
      <find>quora</find>
      <find>&quot;$ref&quot;: &quot;#/parameters/Authorization&quot;</find>
      <find>uuid</find>
      <find>lÌ¥</find>
      <find>Id</find>
      <find>?</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHome" value="C:\Program Files\JetBrains\IntelliJ IDEA 2020.1.4\plugins\maven\lib\maven3" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectId" id="1nXtVlKdAII9siQMITCL686BQmd" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RequestMappingsPanelOrder0" value="0" />
    <property name="RequestMappingsPanelOrder1" value="1" />
    <property name="RequestMappingsPanelWidth0" value="75" />
    <property name="RequestMappingsPanelWidth1" value="75" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="SearchEverywhereHistoryKey" value="yaml&#9;FILE&#9;file://E:/Trello_quora/quora_solution/Trello_quora/quora-api/src/main/resources/application.yaml&#10;quora&#9;FILE&#9;file://E:/Trello_quora/quora_solution/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/QuoraApiApplication.java&#10;quoraapi&#9;FILE&#9;file://E:/Trello_quora/26thsepquora/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/QuoraApiApplication.java&#10;.yaml&#9;FILE&#9;file://E:/Trello_quora/26thsepquora/Trello_quora/quora-api/src/main/resources/application.yaml&#10;userco&#9;FILE&#9;file://E:/Trello_quora/26thsepquora/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/controller/UserController.java&#10;userau&#9;FILE&#9;file://E:/Trello_quora/Trello_quora_solution/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/UserAuthEntity.java&#10;userentity&#9;FILE&#9;file://E:/Trello_quora/Trello_quora_solution/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/UserEntity.java&#10;commond&#9;PSI&#9;JAVA://com.upgrad.quora.service.dao.CommonDao&#10;userdao&#9;FILE&#9;file://E:/Trello_quora/Trello_quora_solution/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/dao/UserDao.java&#10;userc&#9;FILE&#9;file://E:/Trello_quora/Trello_quora_solution/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/controller/UserController.java&#10;quora-api&#9;FILE&#9;file://E:/Trello_quora/Trello_quora_solution/Trello_quora/quora-api/pom.xml&#10;answere&#9;FILE&#9;file://E:/Trello_quora/Trello_quora_solution/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/AnswerEntity.java&#10;.json&#9;FILE&#9;file://E:/Trello_quora/Trello_quora_solution/Trello_quora/quora-api/src/main/resources/endpoints/quora.json&#10;usere&#9;FILE&#9;file://E:/Trello_quora/Trello_quora_solution/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/UserEntity.java&#10;userd&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/dao/UserDao.java&#10;quoraap&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/QuoraApiApplication.java&#10;answer&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/test/java/com/upgrad/quora/api/controller/AnswerControllerTest.java&#10;question&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/test/java/com/upgrad/quora/api/controller/QuestionControllerTest.java&#10;common&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/test/java/com/upgrad/quora/api/controller/CommonControllerTest.java&#10;admincon&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/test/java/com/upgrad/quora/api/controller/AdminControllerTest.java&#10;appli&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/QuoraApiApplication.java&#10;answercontro&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/controller/AnswerController.java&#10;adminte&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/test/java/com/upgrad/quora/api/controller/AdminControllerTest.java&#10;admin&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/test/java/com/upgrad/quora/api/controller/AdminControllerTest.java&#10;userbu&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/UserBusinessService.java&#10;.sql&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-db/src/main/resources/sql/quora.sql&#10;admins&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/AdminBusinessService.java&#10;userauth&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/UserAuthEntity.java&#10;questione&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/QuestionEntity.java&#10;answeren&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/AnswerEntity.java&#10;adminc&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/controller/AdminController.java&#10;app&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/QuoraApiApplication.java&#10;answerda&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/dao/AnswerDao.java&#10;commonbusines&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/CommonBusinessService.java&#10;questionda&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/dao/QuestionDao.java&#10;admindao&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/dao/AdminDao.java&#10;application&#9;FILE&#9;file://E:/Trello_quora/Trello_quora/quora-api/src/main/java/com/upgrad/quora/api/QuoraApiApplication.java&#10;applicat&#9;PSI&#9;JAVA://com.upgrad.quora.api.QuoraApiApplication&#10;quora.sql&#9;FILE&#9;file://E:/Trello_quora/quora-db/src/main/resources/sql/quora.sql&#10;answerdao&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/dao/AnswerDao.java&#10;answerServ&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/AnswerBusinessService.java&#10;questionser&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/QuestionBusinessService.java&#10;commondao&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/dao/CommonDao.java&#10;commonbusiness&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/CommonBusinessService.java&#10;adminservice&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/AdminBusinessService.java&#10;userbusinessser&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/UserBusinessService.java&#10;userservice&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/UserBusinessService.java&#10;entity&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/UserEntity.java&#10;adminser&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/business/AdminBusinessService.java&#10;usera&#9;FILE&#9;file://E:/Trello_quora/quora-service/src/main/java/com/upgrad/quora/service/entity/UserAuthEntity.java" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1538752844056" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.6643678" />
  </component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.upgrad.quora.service.dao" />
      <recent name="com.upgrad.quora.api.controller" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.upgrad.quora.service.entity" />
      <recent name="com.upgrad.quora.service.dao" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\Trello_quora\quora-api\src\main\resources\endpoints" />
      <recent name="E:\Trello_quora\quora-api\src\main\resources" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.QuestionControllerTest.deleteNoneExistingQuestion">
    <configuration name="AnswerControllerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="quora-api" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.upgrad.quora.api.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.upgrad.quora.api.controller" />
      <option name="MAIN_CLASS_NAME" value="com.upgrad.quora.api.controller.AnswerControllerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="QuestionControllerTest.createQuestionWithNonExistingAccessToken" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="quora-api" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.upgrad.quora.api.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.upgrad.quora.api.controller" />
      <option name="MAIN_CLASS_NAME" value="com.upgrad.quora.api.controller.QuestionControllerTest" />
      <option name="METHOD_NAME" value="createQuestionWithNonExistingAccessToken" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="QuestionControllerTest.deleteNoneExistingQuestion" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="quora-api" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.upgrad.quora.api.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.upgrad.quora.api.controller" />
      <option name="MAIN_CLASS_NAME" value="com.upgrad.quora.api.controller.QuestionControllerTest" />
      <option name="METHOD_NAME" value="deleteNoneExistingQuestion" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserControllerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="quora-api" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.upgrad.quora.api.controller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.upgrad.quora.api.controller" />
      <option name="MAIN_CLASS_NAME" value="com.upgrad.quora.api.controller.UserControllerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="QuoraApiApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="quora-api" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.upgrad.quora.api.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.upgrad.quora.api.QuoraApiApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="JUnit.AnswerControllerTest" />
      <item itemvalue="JUnit.UserControllerTest" />
      <item itemvalue="Spring Boot.QuoraApiApplication" />
      <item itemvalue="JUnit.QuestionControllerTest.createQuestionWithNonExistingAccessToken" />
      <item itemvalue="JUnit.QuestionControllerTest.deleteNoneExistingQuestion" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.QuestionControllerTest.deleteNoneExistingQuestion" />
        <item itemvalue="JUnit.QuestionControllerTest.createQuestionWithNonExistingAccessToken" />
        <item itemvalue="Spring Boot.QuoraApiApplication" />
        <item itemvalue="JUnit.AnswerControllerTest" />
        <item itemvalue="JUnit.UserControllerTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" BundledDictionaries="0" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" Dictionaries="0" CorrectionsLimit="5" DefaultDictionary="application-level" UseSingleDictionary="true" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="47a15d9d-c79e-46a9-bbbf-df38ac55657d" name="Default Changelist" comment="" />
      <created>1536048203738</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1536048203738</updated>
      <workItem from="1536048207985" duration="96000" />
      <workItem from="1536048309952" duration="21286000" />
      <workItem from="1536076241742" duration="69040000" />
      <workItem from="1536239262043" duration="3529000" />
      <workItem from="1536322118495" duration="1261000" />
      <workItem from="1536557083754" duration="18208000" />
      <workItem from="1536926622708" duration="18991000" />
      <workItem from="1537084619816" duration="13000" />
      <workItem from="1537160815976" duration="33987000" />
      <workItem from="1537252444687" duration="333000" />
      <workItem from="1537857900467" duration="49714000" />
      <workItem from="1538307248828" duration="14700000" />
      <workItem from="1538372546023" duration="22949000" />
      <workItem from="1538547186116" duration="2069000" />
      <workItem from="1538550064158" duration="4375000" />
      <workItem from="1538634479950" duration="3217000" />
      <workItem from="1538642827225" duration="1059000" />
      <workItem from="1538723860955" duration="5425000" />
      <workItem from="1611548291011" duration="361000" />
      <workItem from="1611559175411" duration="8330000" />
    </task>
    <task id="LOCAL-00001" summary="Created question entity">
      <created>1611559646334</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1611559646334</updated>
    </task>
    <task id="LOCAL-00002" summary="Created method createQuestion &#10;&#10;- POST method is used to create a Question&#10;- QuestionRequest and QuestionResponse is used to get the details from the client and send the response details to the client&#10;- stores it in DB">
      <created>1611561068306</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1611561068306</updated>
    </task>
    <task id="LOCAL-00003" summary="Created method createQuestion in service layer">
      <created>1611561405839</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1611561405839</updated>
    </task>
    <task id="LOCAL-00004" summary="Created method createQuestion to persist data in DB">
      <created>1611561486798</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1611561486798</updated>
    </task>
    <task id="LOCAL-00005" summary="Autowired QuestionDao with QuestionService">
      <created>1611561552039</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1611561552039</updated>
    </task>
    <task id="LOCAL-00006" summary="Autowired QuestionService and CommonService&#10;&#10;- Retrived the UserAuthEntity using common service&#10;- Storing all the details from QuestionRequest to QuestionEntity to persist in DB&#10;- After persisting store the uuid and status in the QuestionResponse and return the ResponseEntity">
      <created>1611562061744</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1611562061744</updated>
    </task>
    <task id="LOCAL-00007" summary="Created endpoint /all to get all the question in DB&#10;&#10;- Used getAllQuestions method from QuestionService to return the list of questions from data layer&#10;- Any authorized user can retrieve all the questions&#10;- Used getAllQuestions method from QuestionService to get all the questions stored in DB">
      <created>1611562585676</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1611562585676</updated>
    </task>
    <task id="LOCAL-00008" summary="Created endpoint &quot;/edit/{questionId}&quot; to edit question content&#10;&#10;- Used getQuestionByUuid and editQuestionContentByOwner method from service layer to edit the quetion content&#10;- Any authorized user and question owner can edit the question&#10;- Used getQuestionByUuid and updateQuestionContent to update the question content">
      <created>1611563044383</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1611563044383</updated>
    </task>
    <task id="LOCAL-00009" summary="Created endpoint &quot;/delete/{questionId}&quot; to delete question by owner or admin&#10;&#10;- Used deleteQuestionByUserorAdmin from service layer to delete the question&#10;- Only authorized owner or admin can delete a question&#10;- Used deleteQuestion from data layer to remove the question from DB">
      <created>1611563341637</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1611563341637</updated>
    </task>
    <task id="LOCAL-00010" summary="Created endpoint &quot;/all/{userId}&quot; to get all question created by user&#10;&#10;- Used getAllQuestionsByUser from service layer to return the questions&#10;- Only authorized user can retrieve/see the questions&#10;- Used getAllQuestionsByUser to get the question from DB using user ID.">
      <created>1611563666716</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1611563666716</updated>
    </task>
    <task id="LOCAL-00011" summary="Updated exception handler with InvalidQuestionException">
      <created>1611564734205</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1611564734205</updated>
    </task>
    <task id="LOCAL-00012" summary="Updated with the latest maven build">
      <created>1611564859681</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1611564859681</updated>
    </task>
    <task id="LOCAL-00013" summary="Created answer entity">
      <created>1611565836660</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1611565836660</updated>
    </task>
    <task id="LOCAL-00014" summary="Created controller for the endpoint &quot;/question/{questionId}/answer/create&quot; to create an answer &#10;- Returns answer's UUID and status as &quot;ANSWER CREATED&quot;&#10;- Uses CommonService, QuestionService to authorize and get the question entity resp&#10;- Adds the answer details from the AnswerRequest&#10;- Uses AnswerService to create Answer">
      <created>1611566236161</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1611566236161</updated>
    </task>
    <task id="LOCAL-00015" summary="Created method createAnswer in service layer&#10;- This passes the answer entity to the data layer to persist&#10;- Returns the answer entity after persisting in the database">
      <created>1611566415759</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1611566415759</updated>
    </task>
    <task id="LOCAL-00016" summary="Created method createAnswer to persist the answer data in DB&#10;- This persists the answer data in DB and returns the answer entity">
      <created>1611566509837</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1611566509837</updated>
    </task>
    <task id="LOCAL-00017" summary="Created method &quot;editAnswerContent&quot; for the endpoint &quot;/answer/edit/{answerId}&quot; to edit an answer&#10;- Returns answer's UUID and status as &quot;ANSWER EDITED&quot;&#10;- Uses CommonService to authorize the user&#10;- The answer is retrieved using &quot;getAnswerByUuid&quot; method in AnsweService&#10;- The answer content gets updated using &quot;editAnswerByOwner&quot; method in AnswerService">
      <created>1611566900719</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1611566900719</updated>
    </task>
    <task id="LOCAL-00018" summary="Created method &quot;editAnswerByOwner&quot; in AnswerService &#10;- Returns answer entity&#10;- throws exception if not owner&#10;- updates the answer using data layer i.e using AnswerDao">
      <created>1611567090557</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1611567090557</updated>
    </task>
    <task id="LOCAL-00019" summary="Created method &quot;updateAnswerContent&quot; in AnswerDao to update the answer content&#10;- Returns answer entity&#10;- updates the answer in DB">
      <created>1611567200230</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1611567200230</updated>
    </task>
    <task id="LOCAL-00020" summary="Created method &quot;getAnswerByUuid&quot; in AnswerService to retrieve the answer entity&#10;- Returns answer entity&#10;- throws exception if answer is not found">
      <created>1611567327079</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1611567327079</updated>
    </task>
    <task id="LOCAL-00021" summary="Created method &quot;getAnswerByUuid&quot; in AnswerDao to return the answer entity&#10;- Returns answer entity&#10;- Returns null if answer is not found">
      <created>1611567392669</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1611567392669</updated>
    </task>
    <task id="LOCAL-00022" summary="Updated AnswerNotFoundException in QuoraExceptionController &#10;- This exception is thrown when the answer is not found in answer table">
      <created>1611567587024</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1611567587024</updated>
    </task>
    <task id="LOCAL-00023" summary="Created method &quot;deleteAnswer&quot; for the endpoint &quot;/answer/delete/{answerId}&quot; to delete answer by Admin or owner&#10;- Returns answer's UUID and status as &quot;ANSWER DELETED&quot;&#10;- Uses CommonService to authorize the user&#10;- The answer is retrieved using &quot;getAnswerByUuid&quot; method in AnswerService&#10;- The answer is deleted using &quot;deleteAnswerByUserOrAdmin&quot; AnswerService">
      <created>1611567717972</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1611567717972</updated>
    </task>
    <option name="localTasksCounter" value="24" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="2" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Created question entity" />
    <MESSAGE value="Created method createQuestion &#10;&#10;- POST method is used to create a Question&#10;- QuestionRequest and QuestionResponse is used to get the details from the client and send the response details to the client&#10;- stores it in DB" />
    <MESSAGE value="Created method createQuestion in service layer" />
    <MESSAGE value="Created method createQuestion to persist data in DB" />
    <MESSAGE value="Autowired QuestionDao with QuestionService" />
    <MESSAGE value="Autowired QuestionService and CommonService&#10;&#10;- Retrived the UserAuthEntity using common service&#10;- Storing all the details from QuestionRequest to QuestionEntity to persist in DB&#10;- After persisting store the uuid and status in the QuestionResponse and return the ResponseEntity" />
    <MESSAGE value="Created endpoint /all to get all the question in DB&#10;&#10;- Used getAllQuestions method from QuestionService to return the list of questions from data layer&#10;- Any authorized user can retrieve all the questions&#10;- Used getAllQuestions method from QuestionService to get all the questions stored in DB" />
    <MESSAGE value="Created endpoint &quot;/edit/{questionId}&quot; to edit question content&#10;&#10;- Used getQuestionByUuid and editQuestionContentByOwner method from service layer to edit the quetion content&#10;- Any authorized user and question owner can edit the question&#10;- Used getQuestionByUuid and updateQuestionContent to update the question content" />
    <MESSAGE value="Created endpoint &quot;/delete/{questionId}&quot; to delete question by owner or admin&#10;&#10;- Used deleteQuestionByUserorAdmin from service layer to delete the question&#10;- Only authorized owner or admin can delete a question&#10;- Used deleteQuestion from data layer to remove the question from DB" />
    <MESSAGE value="Created endpoint &quot;/all/{userId}&quot; to get all question created by user&#10;&#10;- Used getAllQuestionsByUser from service layer to return the questions&#10;- Only authorized user can retrieve/see the questions&#10;- Used getAllQuestionsByUser to get the question from DB using user ID." />
    <MESSAGE value="Updated exception handler with InvalidQuestionException" />
    <MESSAGE value="Updated with the latest maven build" />
    <MESSAGE value="Created answer entity" />
    <MESSAGE value="Created controller for the endpoint &quot;/question/{questionId}/answer/create&quot; to create an answer &#10;- Returns answer's UUID and status as &quot;ANSWER CREATED&quot;&#10;- Uses CommonService, QuestionService to authorize and get the question entity resp&#10;- Adds the answer details from the AnswerRequest&#10;- Uses AnswerService to create Answer" />
    <MESSAGE value="Created method createAnswer in service layer&#10;- This passes the answer entity to the data layer to persist&#10;- Returns the answer entity after persisting in the database" />
    <MESSAGE value="Created method createAnswer to persist the answer data in DB&#10;- This persists the answer data in DB and returns the answer entity" />
    <MESSAGE value="Created method &quot;editAnswerContent&quot; for the endpoint &quot;/answer/edit/{answerId}&quot; to edit an answer&#10;- Returns answer's UUID and status as &quot;ANSWER EDITED&quot;&#10;- Uses CommonService to authorize the user&#10;- The answer is retrieved using &quot;getAnswerByUuid&quot; method in AnsweService&#10;- The answer content gets updated using &quot;editAnswerByOwner&quot; method in AnswerService" />
    <MESSAGE value="Created method &quot;editAnswerByOwner&quot; in AnswerService &#10;- Returns answer entity&#10;- throws exception if not owner&#10;- updates the answer using data layer i.e using AnswerDao" />
    <MESSAGE value="Created method &quot;updateAnswerContent&quot; in AnswerDao to update the answer content&#10;- Returns answer entity&#10;- updates the answer in DB" />
    <MESSAGE value="Created method &quot;getAnswerByUuid&quot; in AnswerService to retrieve the answer entity&#10;- Returns answer entity&#10;- throws exception if answer is not found" />
    <MESSAGE value="Created method &quot;getAnswerByUuid&quot; in AnswerDao to return the answer entity&#10;- Returns answer entity&#10;- Returns null if answer is not found" />
    <MESSAGE value="Updated AnswerNotFoundException in QuoraExceptionController" />
    <MESSAGE value="Updated AnswerNotFoundException in QuoraExceptionController &#10;- This exception is thrown when the answer is not found in answer table" />
    <MESSAGE value="Created method &quot;deleteAnswer&quot; for the endpoint &quot;/answer/delete/{answerId}&quot; to delete answer by Admin or owner&#10;- Returns answer's UUID and status as &quot;ANSWER DELETED&quot;&#10;- Uses CommonService to authorize the user&#10;- The answer is retrieved using &quot;getAnswerByUuid&quot; method in AnswerService&#10;- The answer is deleted using &quot;deleteAnswerByUserOrAdmin&quot; AnswerService" />
    <option name="LAST_COMMIT_MESSAGE" value="Created method &quot;deleteAnswer&quot; for the endpoint &quot;/answer/delete/{answerId}&quot; to delete answer by Admin or owner&#10;- Returns answer's UUID and status as &quot;ANSWER DELETED&quot;&#10;- Uses CommonService to authorize the user&#10;- The answer is retrieved using &quot;getAnswerByUuid&quot; method in AnswerService&#10;- The answer is deleted using &quot;deleteAnswerByUserOrAdmin&quot; AnswerService" />
  </component>
  <component name="WindowStateProjectService">
    <state width="1493" height="210" key="GridCell.Tab.0.bottom" timestamp="1611564603849">
      <screen x="0" y="0" width="1536" height="824" />
    </state>
    <state width="1493" height="210" key="GridCell.Tab.0.bottom/0.0.1536.824@0.0.1536.824" timestamp="1611564603849" />
    <state width="1493" height="210" key="GridCell.Tab.0.center" timestamp="1611564603849">
      <screen x="0" y="0" width="1536" height="824" />
    </state>
    <state width="1493" height="210" key="GridCell.Tab.0.center/0.0.1536.824@0.0.1536.824" timestamp="1611564603849" />
    <state width="1493" height="210" key="GridCell.Tab.0.left" timestamp="1611564603848">
      <screen x="0" y="0" width="1536" height="824" />
    </state>
    <state width="1493" height="210" key="GridCell.Tab.0.left/0.0.1536.824@0.0.1536.824" timestamp="1611564603848" />
    <state width="1493" height="210" key="GridCell.Tab.0.right" timestamp="1611564603849">
      <screen x="0" y="0" width="1536" height="824" />
    </state>
    <state width="1493" height="210" key="GridCell.Tab.0.right/0.0.1536.824@0.0.1536.824" timestamp="1611564603849" />
    <state x="361" y="132" key="Vcs.Push.Dialog.v2" timestamp="1611564866704">
      <screen x="0" y="0" width="1536" height="824" />
    </state>
    <state x="361" y="132" key="Vcs.Push.Dialog.v2/0.0.1536.824@0.0.1536.824" timestamp="1611564866704" />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="SpringBootApplicationConfigurationType">
        <watch expression="userEntity" />
      </configuration>
    </watches-manager>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>Spring</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>quora-db</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.6643678" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Java EE 6-Java EE 6</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>